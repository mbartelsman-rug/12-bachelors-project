
(*============================================*
 * EITHER                                     *
 *--------------------------------------------*
 * Contains the definitions and filters for   *
 * unions of two possible variants.           *
 *============================================*)

type either_t =
| LeftVal  (value_t)
| RightVal (value_t)

(* Asserts that the value is the left variant and returns it *)
val either_as_left (e: either_t): (value_t) =
  let LeftVal v = e in v

(* Asserts that the value is the right variant and returns it *)
val either_as_right (e: either_t): (value_t) =
  let RightVal v = e in v
